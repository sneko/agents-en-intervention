# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/'
    exclude:
      - '../src/DependencyInjection/'
      - '../src/Entity/'
      - '../src/Kernel.php'

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones

  App\State\UserPasswordHasher:
    bind:
      $processor: '@api_platform.doctrine.orm.state.persist_processor'

  acme_api.event.jwt_created_listener:
    class: App\EventListener\JWTCreatedListener
    arguments: ['@request_stack']
    tags:
      - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_created, method: onJWTCreated }

  App\Service\S3PutService:
    arguments:
      $endPoint: '%env(S3_ENDPOINT)%'
      $accessKey: '%env(S3_ACCESS_KEY)%'
      $secretKey: '%env(S3_SECRET_KEY)%'
      $region: '%env(S3_REGION)%'
      $bucket: '%env(S3_NAME)%'

  App\Service\S3GetUrlService:
    arguments:
      $endPoint: '%env(S3_ENDPOINT)%'
      $accessKey: '%env(S3_ACCESS_KEY)%'
      $secretKey: '%env(S3_SECRET_KEY)%'
      $region: '%env(S3_REGION)%'
      $bucket: '%env(S3_NAME)%'

  App\Service\S3DeleteService:
    arguments:
      $endPoint: '%env(S3_ENDPOINT)%'
      $accessKey: '%env(S3_ACCESS_KEY)%'
      $secretKey: '%env(S3_SECRET_KEY)%'
      $region: '%env(S3_REGION)%'
      $bucket: '%env(S3_NAME)%'

  App\State\DeleteInterventionProcessor:
    bind:
      $removeProcessor: '@api_platform.doctrine.orm.state.remove_processor'

  App\State\EmployerInterventionsProvider:
    bind:
      $collectionProvider: '@api_platform.doctrine.orm.state.collection_provider'

  App\State\InterventionProvider:
    bind:
      $itemProvider: '@api_platform.doctrine.orm.state.item_provider'

  App\State\UserInterventionsProvider:
    bind:
      $collectionProvider: '@api_platform.doctrine.orm.state.collection_provider'
